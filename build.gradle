plugins {
  id 'fabric-loom' version '1.2-SNAPSHOT'
  id 'maven-publish'
  id "org.jetbrains.kotlin.jvm" version "1.8.22"
}

version = mod_version
group = maven_group

base {
  archivesName = archives_base_name
}

repositories {
  maven {
    name = 'Terraformers'
    url  = 'https://maven.terraformersmc.com/releases/'
  }

  maven {
    name = 'Jitpack'
    url  = 'https://jitpack.io/'
  }

  maven {
    name = 'Geckolib'
    url  = 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
  }

  maven {
    name = 'Modrinth'
    url  = 'https://api.modrinth.com/maven/'
  }
}

dependencies {
  minecraft "com.mojang:minecraft:$minecraft_version"
  mappings "net.fabricmc:yarn:$minecraft_version+build.$yarn_build:v2"
  modImplementation "net.fabricmc:fabric-loader:$loader_version"

  modImplementation "net.fabricmc.fabric-api:fabric-api:$fabric_version"
  modImplementation "net.fabricmc:fabric-language-kotlin:$fabric_kotlin_version"

  modImplementation "maven.modrinth:midnightlib:$midnightlib_version"
  modImplementation "software.bernie.geckolib:geckolib-fabric-$geckolib_version"
  implementation "com.github.LlamaLad7:MixinExtras:$mixin_extras_version"

  modImplementation "com.terraformersmc:modmenu:$mod_menu_version"
}

loom {
  splitEnvironmentSourceSets()

  accessWidenerPath = file("src/main/resources/${mod_id}.accesswidener")

  mods {
    mod_id {
      sourceSet sourceSets.main
      sourceSet sourceSets.client
    }
  }

  runs {
    datagen {
      inherit server
      name "Data Generation"
      vmArg "-Dfabric-api.datagen"
      vmArg "-Dfabric-api.datagen.output-dir=${file("src/generated/resources")}"
      vmArg "-Dfabric-api.datagen.modid=$mod_id"

      runDir "build/datagen"
    }
  }
}

// Add the generated resources to the main source set
sourceSets {
  main {
    resources {
      srcDirs += [
              'src/generated/resources'
      ]
    }
  }
}

processResources {
  inputs.property "version", version

  filesMatching("fabric.mod.json") {
    expand "version": version
  }
}

tasks.withType(JavaCompile).configureEach {
  it.options.release = 17
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
  kotlinOptions {
    jvmTarget = 17
  }
}

java {
  // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
  // if it is present.
  // If you remove this line, sources will not be generated.
  withSourcesJar()

  sourceCompatibility = JavaVersion.VERSION_17
  targetCompatibility = JavaVersion.VERSION_17
}

jar {
  from("LICENSE") {
    rename { "${it}_$archivesBaseName"}
  }
}

// configure the maven publication
publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
    }
  }

  repositories {
  }
}
